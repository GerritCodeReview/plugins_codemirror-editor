{
  "comments": [
    {
      "key": {
        "uuid": "9dacb11f_29552d82",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-12-06T19:07:57Z",
      "side": 1,
      "message": "This should be ready to go.\n\nI only have one issue when building this using [1], and that is this line. When this build file is targeted by plugins:core, it seems like the //lib/js referenced is the one that exists in the root gerrit directory, as opposed to the plugins/codemirror-editor/lib/js/BUILD. Does anyone know how to fix that?",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03fecd64_62f8444d",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-12-06T19:35:48Z",
      "side": 1,
      "message": "What is [1]? Can you be more specific, what build mode are you using and what exactly the problem is? \n\nI also wonder, if we should add build.md file here? As example let me reference you to the build documentation for javamelody plugin:  https://gerrit.googlesource.com/plugins/javamelody/+/master/src/main/resources/Documentation/build.md",
      "parentUuid": "9dacb11f_29552d82",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "751a44c1_5e9a33e6",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-12-06T19:57:01Z",
      "side": 1,
      "message": "Whoops, link is this one https://gerrit-review.googlesource.com/c/gerrit/+/142470\n\nWith that checked out, as well as this relation chain, `bazel build plugins:core` fails because codemirror doesn\u0027t exist in gerrit\u0027s lib/J\u0027s.",
      "parentUuid": "03fecd64_62f8444d",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291bea5a_4513a1e3",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-12-06T19:58:31Z",
      "side": 1,
      "message": "As for build.md, yes! I\u0027ll be sure to add one in a descendant change.",
      "parentUuid": "751a44c1_5e9a33e6",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e02e7e9c_8cc0b901",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-12-06T21:10:49Z",
      "side": 1,
      "message": "I think that: [1] link, that you referenced to, is providing third build mode: adding codemirror-editor to the list of core plugins. In addition the change you linke to, was added as this plugin was producing js-plugin, but then the build tool chain was changed to produce JAR artifact. Should then the [1] be adapted to from JS_PLUGIN to regular plugins? Another issue/confusion, is that for core plugins, we usually ship the dependency in gerrit core, yet you abandoned this change: [2].\n\nBotom line: Do we really need all this build mpode permuatations?\n\n* standalone build\n* in gerrit tree build support\n* make the codemirror-editor plugin as gerrit core plugin, like replication?\n\nNote, this is not bad to support all this, i just think that this is too much for one single plugin. So either we say:\n\n* This is not a core plugin, but supports standalone build mode and in gerrit tree build mode.\n* To build in gerrit tree mode, some files must be copied in gerrit tree prior to starting the build.\n* To build in standalone build, specific bazlets revision must be referenced, prior to start the build\n\nOr we say:\n\n* This is a core plugin, means, that all the above should not be needed, if we are talking about gerrit core plugin. All dependency must be provided by gerrit. IOW, if you still think that this plugin should be core plugin, then: [2] should be restored. (But i Think that [2] should be adapted to reflect the fact that codemirror-editor is just standard Jar plugin tha thappens to depend in some (external) JS library.\n\nAnd this is not something new (well in term dependency on JS library from the core plugin it is new), we have exactly the same situation: check replication plugin, that is gerrit core plugin, but has external dependency:\n\n  gerrit_plugin(\n    name \u003d \"replication\",\n    srcs \u003d glob([\"src/main/java/**/*.java\"]),\n    manifest_entries \u003d [\n        \"Implementation-Title: Replication plugin\",\n        \"Implementation-URL: https://gerrit-review.googlesource.com/#/admin/projects/plugins/replication\",\n        \"Gerrit-PluginName: replication\",\n        \"Gerrit-InitStep: com.googlesource.gerrit.plugins.replication.Init\",\n        \"Gerrit-Module: com.googlesource.gerrit.plugins.replication.ReplicationModule\",\n        \"Gerrit-SshModule: com.googlesource.gerrit.plugins.replication.SshModule\",\n    ],\n    resources \u003d glob([\"src/main/resources/**/*\"]),\n    deps \u003d [\n        \"//lib:commons-io\",\n    ],\n  )\n\nDue to Bazel limitation (external dependency must be defined in WORKSPACE file, and no recursive WORSPACE files are currently supported) lib:commons-io is defined in gerrit core, yet this dependency is not used by gerrit itself, but is only there to build replication plugin:\n\n  $ git grep commons-io\n  WORKSPACE:    artifact \u003d \"commons-io:commons-io:1.4\",\n  lib/BUILD:    name \u003d \"commons-io\",\n\nIOW, if a user build gerrit, she is fetching this external dependency. To produce release.war with replication plugin inside. But if she doesn\u0027t use this plugin, and doesn\u0027t install it in gerrit site, then fetching this external dependency (and builindng this plugin) was in vain.\n\n* [2] https://gerrit-review.googlesource.com/#/c/gerrit/+/141073/",
      "parentUuid": "751a44c1_5e9a33e6",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95e26c74_681ccdf9",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-12-06T21:31:35Z",
      "side": 1,
      "message": "I understand you.\n\nSo, the ultimate goal here is to get this plugin building as a standalone component. We\u0027d like to separate dependencies as much as possible, ideally by just letting plugins manage their own dependencies completely separately from gerrit\u0027s core code.\n\nWith this plugin, I want it to build completely on its own (i.e. declaring its dependencies discretely in its WORKSPACE file), but also to build and distribute it as a core plugin.\n\nThe JAR packaging step that you\u0027ve made is, in my opinion, not the proper long term fix. As GWT is deprecated and will eventually be removed, we definitely will need to upgrade the WAR init script to account for pure HTML plugins -- that task is just out-of-scope for this specific task, and the JAR packaging is just a workaround for now.\n\nSo, to address \"bottom line\", we want to (ideally) _only_ support standalone mode, but also make the codemirror-editor plugin a gerrit core plugin. \n\nAlso, I want to clear up this terminology, because I think it might be a confounding factor here. To me, a \"core plugin\" is just one that is included by default in a gerrit distribution. I don\u0027t think that a \"core plugin\" _must_ have its dependencies managed by gerrit itself. Unless there\u0027s an engineering reason this has to be true that I\u0027m missing...?",
      "parentUuid": "e02e7e9c_8cc0b901",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb342fd_7f12f9aa",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-12-06T21:50:45Z",
      "side": 1,
      "message": "The two goals you are mentioned, that you would like to achieve here is a clear contradiction to me:\n\n* support standalone build\n* be a gerrit core plugin\n\n\u003e To me, a \"core plugin\" is just one that is included by default in a gerrit distribution.\n\nMore accurate: it\u0027s included in release.war. When a user run `java -jar release.war init -d \u003cgerrit_site\u003e` then the question are aksed, whether or not all gerrit core plugins should or should not be installed.\n\n\u003e Unless there\u0027s an engineering reason this has to be true that I\u0027m missing...?\n\nThis is the reason: [1]. Design document is there, but it is all not implemented yet, and Kristina Chodorow (kchodorow) quit Google recently ;-( So yes, there is Bazel limitation, why all external dependeniesy must be listed/fetched by gerrit core, for all their core plugins.\n\n* [1] https://bazel.build/designs/2016/09/19/recursive-ws-parsing.html",
      "parentUuid": "95e26c74_681ccdf9",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a65cb07_3ed9321d",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-12-06T22:09:05Z",
      "side": 1,
      "message": "My suggestion to move forward here is to choose between two options:\n\n* a) standalone (bazlets based) build + optional in gerrit tree build without hard coded dependency on CM in gerrit core, or\n* b) gerrit core plugin with hard coded dependency on CM in gerrit core (that would include the plugin in release.war).\n\nBoth options would produce JAR final artifact for now.",
      "parentUuid": "2eb342fd_7f12f9aa",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a4c9c61_6cbb8f78",
        "filename": "BUILD",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-12-06T22:21:15Z",
      "side": 1,
      "message": "If we were to do the former (a), how would we package the built plugin with the release?",
      "parentUuid": "3a65cb07_3ed9321d",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "dab554c4f3d62aab7601cc5760318049273d5ead",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}