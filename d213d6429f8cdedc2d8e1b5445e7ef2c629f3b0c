{
  "comments": [
    {
      "key": {
        "uuid": "41b1e665_3e205f20",
        "filename": "gr-editor/gr-editor.js",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-01-02T20:26:36Z",
      "side": 1,
      "message": "Why did you make this change? What did it fix?",
      "revId": "d213d6429f8cdedc2d8e1b5445e7ef2c629f3b0c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0116b6d_df89e100",
        "filename": "gr-editor/gr-editor.js",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2018-01-02T20:58:56Z",
      "side": 1,
      "message": "We need CodeMirror.findModeByMIME to mape for example text/javascript to it\u0027s mode.",
      "parentUuid": "41b1e665_3e205f20",
      "revId": "d213d6429f8cdedc2d8e1b5445e7ef2c629f3b0c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7538583e_9df69dd3",
        "filename": "gr-editor/gr-editor.js",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-01-02T21:17:04Z",
      "side": 1,
      "message": "We don\u0027t need to map mime to mode, codemirror does that.\n\nhttps://codemirror.net/doc/manual.html#config",
      "parentUuid": "a0116b6d_df89e100",
      "revId": "d213d6429f8cdedc2d8e1b5445e7ef2c629f3b0c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e63b17d_c47c855a",
        "filename": "gr-editor/gr-editor.js",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2018-01-02T21:22:54Z",
      "side": 1,
      "message": "It wont work if you return a string. ie \n\nLANGUAGE_MAP[type] || \u0027\u0027;",
      "parentUuid": "7538583e_9df69dd3",
      "revId": "d213d6429f8cdedc2d8e1b5445e7ef2c629f3b0c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a9284d7_25bcd3d7",
        "filename": "gr-editor/gr-editor.js",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-01-02T21:28:16Z",
      "side": 1,
      "message": "...yes it will? What makes you say that?\n\nThis is quoted directly from the docs:\n\n  mode: string|object\n  The mode to use. When not given, this will default to the first mode that was \n  loaded. It may be a string, which either simply names the mode or is a MIME \n  type associated with the mode.",
      "parentUuid": "2e63b17d_c47c855a",
      "revId": "d213d6429f8cdedc2d8e1b5445e7ef2c629f3b0c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9437f4de_95c7ad2b",
        "filename": "gr-editor/gr-editor.js",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2018-01-02T21:44:35Z",
      "side": 1,
      "message": "Because we do\n\nparams.mode \u003d prefs.syntax_highlighting ? this._mapFileType(type) : \u0027\u0027;\n\nand in we do\n\n    _mapFileType(type) {\n      return LANGUAGE_MAP[type] || \u0027\u0027;\n    },\n\nNotice how we add \u0027\u0027 to params mode if this._mapFileType(type) fails.\n\nbecause we pre populate params.mode codemirror will use that so it wont do\n\n\"The mode to use. When not given, this will default to the first mode that was \n  loaded. It may be a string, which either simply names the mode or is a MIME \n  type associated with the mode.\"\n\nTested locally to confirm what im saying.\n\nWithout CodeMirror.findModeByMIME my file index.js does not get highlighted.",
      "parentUuid": "7a9284d7_25bcd3d7",
      "revId": "d213d6429f8cdedc2d8e1b5445e7ef2c629f3b0c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}